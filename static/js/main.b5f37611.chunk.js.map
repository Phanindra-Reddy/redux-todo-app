{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/actions.js","Todo.js","App.js","reportWebVitals.js","redux/reducer/reducer.js","redux/store.js","index.js"],"names":["ACTIONS","editTodo","id","todoname","type","TodoForm","completed","dispatch","useState","todo","setTodo","edit","setEdit","style","textDecoration","onClick","toggleTodo","deleteTodo","value","onChange","e","target","Todo","todos","useSelector","state","useDispatch","console","log","className","onSubmit","preventDefault","placeholder","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","reduce","maxId","Math","max","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5f37611.chunk.js","sourcesContent":["\r\n\r\nexport const ACTIONS = {\r\n    ADD_TODO:'ADD_TODO',\r\n    DELETE_TODO:'DELETE_TODO',\r\n    EDIT_TODO:'EDIT_TODO',\r\n    TOGGLE_TODO:'TOGGLE_TODO',\r\n}","\r\n\r\nimport {ACTIONS} from './actionTypes';\r\n\r\n\r\nexport const addTodo = (todoname) => {\r\n    return {\r\n        type:ACTIONS.ADD_TODO,\r\n        todoname\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (id) => {\r\n    return {\r\n        type:ACTIONS.DELETE_TODO,\r\n        id\r\n    }\r\n}\r\n\r\nexport const toggleTodo = (id) => {\r\n    return {\r\n        type:ACTIONS.TOGGLE_TODO,\r\n        id\r\n    }\r\n}\r\n\r\nexport const editTodo = (id,todoname) => {\r\n    return {\r\n        type:ACTIONS.EDIT_TODO,\r\n        id,\r\n        todoname,\r\n    }\r\n}","import React,{useState} from 'react';\r\nimport './App.css';\r\n\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { addTodo, deleteTodo, toggleTodo, editTodo } from './redux/actions/actions';\r\n\r\n\r\nfunction Todo() {\r\n\r\n  const todos = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(todos);\r\n\r\n  const [todo, setTodo] = useState('');\r\n\r\n  const onSubmitForm = (e) => {\r\n      e.preventDefault();\r\n      dispatch(addTodo(todo));\r\n      setTodo('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>React Redux TODO App</h1>\r\n\r\n      <form onSubmit={onSubmitForm}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter TODO\"\r\n          value={todo}\r\n          onChange={(e)=>setTodo(e.target.value)}\r\n        />\r\n        <button>Add TODO</button>\r\n      </form>\r\n\r\n\r\n      <ol>\r\n        <h5>Todos</h5>\r\n        \r\n        {\r\n          todos.map(todo => \r\n            <TodoForm \r\n              key={ todo.id }\r\n              id={ todo.id }  \r\n              todoname={todo.todoname} \r\n              dispatch={dispatch}\r\n              completed={todo.completed}\r\n            />\r\n          )\r\n        }\r\n      </ol>\r\n \r\n    </div>\r\n  );\r\n}\r\n\r\nconst TodoForm = ({id, todoname, completed, dispatch}) => {\r\n\r\n  const [todo, setTodo] = useState(todoname);\r\n  const [edit, setEdit] = useState('list');\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        edit === 'list' ?\r\n        \r\n        <div key={id}>\r\n          <li style={{textDecoration:completed?'line-through':'none'}}>{todoname}</li>\r\n    \r\n          <button onClick={()=>dispatch(toggleTodo(id))}>Completed</button>\r\n          <button onClick={()=>setEdit(dispatch(editTodo(id,todoname)))}>Edit</button>\r\n          <button onClick={()=>dispatch(deleteTodo(id))}>Delete</button>\r\n        </div> :\r\n\r\n        <div>\r\n          <input type=\"text\" value={todo} onChange={e=>setTodo(e.target.value)}/>\r\n          <button type=\"submit\" onClick={()=>{dispatch(editTodo(id,todo));setEdit('list')}}>Save</button>\r\n          <button onClick={()=>setEdit(\"list\")} id=\"cancelBtn\">Cancel</button>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react';\nimport './App.css';\n\nimport Todo from './Todo';\n\nfunction App() {\n\n \n  return (\n    <div className=\"App\">\n      \n      <Todo/>\n\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\nimport {ACTIONS} from '../actions/actionTypes';\r\n\r\nconst initialState = [\r\n    \r\n        {\r\n            id:1,\r\n            todoname:'Exam Prep for Sem',\r\n            completed:false\r\n        },\r\n        {\r\n            id:2,\r\n            todoname:'Project demo work and ppt',\r\n            completed:false\r\n        },\r\n        {\r\n            id:3,\r\n            todoname:'Get Grociers from Dmart',\r\n            completed:false\r\n        }\r\n    \r\n]\r\n\r\nexport const reducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case ACTIONS.ADD_TODO:\r\n            return [\r\n                ...state,\r\n                {\r\n                    id:  state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\r\n                    todoname:action.todoname,\r\n                    completed:false\r\n                }\r\n            ]\r\n\r\n        case ACTIONS.DELETE_TODO:\r\n            return state.filter(todo =>\r\n                todo.id !== action.id\r\n            )\r\n\r\n        case ACTIONS.TOGGLE_TODO:\r\n            return state.map(todo => \r\n                (todo.id === action.id) \r\n                    ? {...todo, completed: !todo.completed} \r\n                    : todo\r\n            )\r\n\r\n        case ACTIONS.EDIT_TODO:\r\n            return state.map(todo => \r\n                (todo.id === action.id) \r\n                    ? {...todo, todoname:action.todoname}\r\n                    : todo\r\n            )\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n","\r\n\r\nimport {createStore} from 'redux';\r\n\r\nimport {reducer} from './reducer/reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}